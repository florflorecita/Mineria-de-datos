{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Practica1.2.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kfz4w2QtJ6Xx",
        "colab_type": "text"
      },
      "source": [
        "Practica 1.2 Datos: videojuegos sales"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5lCEBTD6KDr1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from google.colab import files"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PQb0dboTKR5P",
        "colab_type": "code",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": "OK"
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 75
        },
        "outputId": "913f3b96-3501-4f06-c41d-2aa89548e2c7"
      },
      "source": [
        "uploaded = files.upload()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-9915bd78-a94b-4725-bc57-8b88ecf7457c\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-9915bd78-a94b-4725-bc57-8b88ecf7457c\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving vgsales.csv to vgsales.csv\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MopEg3yPKWYx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "outputId": "1e82bfcf-7be3-42d9-cabf-78bd68ab4414"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import missingno as msno\n",
        "%matplotlib inline"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n",
            "  import pandas.util.testing as tm\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "y-4ckP1-b6-l",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "3d3cd8bf-6270-4757-f4b4-7a89b68cba98"
      },
      "source": [
        "df = pd.read_csv(\"vgsales.csv\")\n",
        "df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank                      Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7ESHkcKveqDn",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 348
        },
        "outputId": "983e44dc-7670-4182-c3a0-b605feca23ca"
      },
      "source": [
        "df.info()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 16598 entries, 0 to 16597\n",
            "Data columns (total 11 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   Rank          16598 non-null  int64  \n",
            " 1   Name          16598 non-null  object \n",
            " 2   Platform      16598 non-null  object \n",
            " 3   Year          16327 non-null  float64\n",
            " 4   Genre         16598 non-null  object \n",
            " 5   Publisher     16540 non-null  object \n",
            " 6   NA_Sales      16598 non-null  float64\n",
            " 7   EU_Sales      16598 non-null  float64\n",
            " 8   JP_Sales      16598 non-null  float64\n",
            " 9   Other_Sales   16598 non-null  float64\n",
            " 10  Global_Sales  16598 non-null  float64\n",
            "dtypes: float64(6), int64(1), object(4)\n",
            "memory usage: 1.4+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DvqU8QNBesg0",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "f1f87bc4-c2ef-44e4-951b-a22bd2e4bd88"
      },
      "source": [
        "df.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16598, 11)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Vh6tWS06e-8w",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "7377810a-f5e9-4dd7-8041-b1db73c3a91d"
      },
      "source": [
        "df.columns.values.tolist()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Rank',\n",
              " 'Name',\n",
              " 'Platform',\n",
              " 'Year',\n",
              " 'Genre',\n",
              " 'Publisher',\n",
              " 'NA_Sales',\n",
              " 'EU_Sales',\n",
              " 'JP_Sales',\n",
              " 'Other_Sales',\n",
              " 'Global_Sales']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PIglp7J-fMtj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "eef6c762-7030-4848-bf34-43a02a053ac3"
      },
      "source": [
        "df.isnull().any().any()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "plZTAD80fVhz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 237
        },
        "outputId": "36dec713-80d3-4d1b-ddff-1d31c52236bb"
      },
      "source": [
        "pip install missingno"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: missingno in /usr/local/lib/python3.6/dist-packages (0.4.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from missingno) (1.18.5)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from missingno) (1.4.1)\n",
            "Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from missingno) (3.2.2)\n",
            "Requirement already satisfied: seaborn in /usr/local/lib/python3.6/dist-packages (from missingno) (0.10.1)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->missingno) (2.8.1)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->missingno) (0.10.0)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->missingno) (2.4.7)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->missingno) (1.2.0)\n",
            "Requirement already satisfied: pandas>=0.22.0 in /usr/local/lib/python3.6/dist-packages (from seaborn->missingno) (1.0.5)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.1->matplotlib->missingno) (1.15.0)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas>=0.22.0->seaborn->missingno) (2018.9)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qz-X9ANSfgO6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import missingno as msno"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "42ELXQMtftDV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 582
        },
        "outputId": "b81a2b54-40c9-4619-ce12-79e6c950fe8c"
      },
      "source": [
        "msno.matrix(df)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f76e16daa90>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1800x720 with 2 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oJdBWiISfyhL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 639
        },
        "outputId": "88dfe780-5ee7-4d12-f1ae-4d291ed1a23d"
      },
      "source": [
        "msno.bar(df)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f76ded6cf60>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 1728x720 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pY3K4BQTjpLv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "1c262720-6734-4ff5-a5c8-b45c6743b8dc"
      },
      "source": [
        "df.columns[df.isnull().any()].tolist()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Year', 'Publisher']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qs-ssbySYgKF",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 297
        },
        "outputId": "7c2d8534-f380-418e-a6c5-2c0d7c62f32f"
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Year</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>16598.000000</td>\n",
              "      <td>16327.000000</td>\n",
              "      <td>16598.000000</td>\n",
              "      <td>16598.000000</td>\n",
              "      <td>16598.000000</td>\n",
              "      <td>16598.000000</td>\n",
              "      <td>16598.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>8300.605254</td>\n",
              "      <td>2006.406443</td>\n",
              "      <td>0.264667</td>\n",
              "      <td>0.146652</td>\n",
              "      <td>0.077782</td>\n",
              "      <td>0.048063</td>\n",
              "      <td>0.537441</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>4791.853933</td>\n",
              "      <td>5.828981</td>\n",
              "      <td>0.816683</td>\n",
              "      <td>0.505351</td>\n",
              "      <td>0.309291</td>\n",
              "      <td>0.188588</td>\n",
              "      <td>1.555028</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1980.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4151.250000</td>\n",
              "      <td>2003.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.060000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>8300.500000</td>\n",
              "      <td>2007.000000</td>\n",
              "      <td>0.080000</td>\n",
              "      <td>0.020000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.010000</td>\n",
              "      <td>0.170000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>12449.750000</td>\n",
              "      <td>2010.000000</td>\n",
              "      <td>0.240000</td>\n",
              "      <td>0.110000</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.040000</td>\n",
              "      <td>0.470000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>16600.000000</td>\n",
              "      <td>2020.000000</td>\n",
              "      <td>41.490000</td>\n",
              "      <td>29.020000</td>\n",
              "      <td>10.220000</td>\n",
              "      <td>10.570000</td>\n",
              "      <td>82.740000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "               Rank          Year  ...   Other_Sales  Global_Sales\n",
              "count  16598.000000  16327.000000  ...  16598.000000  16598.000000\n",
              "mean    8300.605254   2006.406443  ...      0.048063      0.537441\n",
              "std     4791.853933      5.828981  ...      0.188588      1.555028\n",
              "min        1.000000   1980.000000  ...      0.000000      0.010000\n",
              "25%     4151.250000   2003.000000  ...      0.000000      0.060000\n",
              "50%     8300.500000   2007.000000  ...      0.010000      0.170000\n",
              "75%    12449.750000   2010.000000  ...      0.040000      0.470000\n",
              "max    16600.000000   2020.000000  ...     10.570000     82.740000\n",
              "\n",
              "[8 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bshIN4z3atEp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "7fc91240-77b8-4c96-f58e-1814e9eb58c1"
      },
      "source": [
        "df.loc[[0]]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank        Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "0     1  Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "\n",
              "[1 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G7bNLvxGIeVz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "outputId": "60aaec3c-ebce-44b4-c773-7d477f052ab1"
      },
      "source": [
        "df[\"Genre\"].loc[[100]]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "100    Action\n",
              "Name: Genre, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "duYDbdGdI6j5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "18cf5dcb-27c0-4ea6-e421-5d93edbec59c"
      },
      "source": [
        "df.loc[1000:1050]"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1000</th>\n",
              "      <td>1002</td>\n",
              "      <td>The Urbz: Sims in the City</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.95</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.29</td>\n",
              "      <td>1.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1001</th>\n",
              "      <td>1003</td>\n",
              "      <td>FIFA Soccer 08</td>\n",
              "      <td>PS3</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1.07</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.32</td>\n",
              "      <td>1.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1002</th>\n",
              "      <td>1004</td>\n",
              "      <td>Star Wars: Starfighter</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.87</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1003</th>\n",
              "      <td>1005</td>\n",
              "      <td>Madden NFL 2000</td>\n",
              "      <td>PS</td>\n",
              "      <td>1998.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>1.68</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1004</th>\n",
              "      <td>1006</td>\n",
              "      <td>Kingdom Hearts</td>\n",
              "      <td>PS3</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Square Enix</td>\n",
              "      <td>0.90</td>\n",
              "      <td>0.37</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.24</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1005</th>\n",
              "      <td>1007</td>\n",
              "      <td>Star Wars: Battlefront</td>\n",
              "      <td>XB</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>1.24</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1006</th>\n",
              "      <td>1008</td>\n",
              "      <td>Pro Evolution Soccer</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Konami Digital Entertainment</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.90</td>\n",
              "      <td>0.53</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1007</th>\n",
              "      <td>1009</td>\n",
              "      <td>Crackdown</td>\n",
              "      <td>X360</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Microsoft Game Studios</td>\n",
              "      <td>1.00</td>\n",
              "      <td>0.54</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.18</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1008</th>\n",
              "      <td>1010</td>\n",
              "      <td>Yoshi</td>\n",
              "      <td>NES</td>\n",
              "      <td>1991.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.91</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1009</th>\n",
              "      <td>1011</td>\n",
              "      <td>Disney's Aladdin</td>\n",
              "      <td>SNES</td>\n",
              "      <td>1993.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Capcom</td>\n",
              "      <td>0.94</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1010</th>\n",
              "      <td>1012</td>\n",
              "      <td>Kirby's Adventure</td>\n",
              "      <td>NES</td>\n",
              "      <td>1993.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>0.79</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.80</td>\n",
              "      <td>0.02</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1011</th>\n",
              "      <td>1013</td>\n",
              "      <td>Cooking Mama 3: Shop &amp; Chop</td>\n",
              "      <td>DS</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>505 Games</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.08</td>\n",
              "      <td>0.18</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1012</th>\n",
              "      <td>1014</td>\n",
              "      <td>Dance Dance Revolution X</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Konami Digital Entertainment</td>\n",
              "      <td>0.85</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.22</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1013</th>\n",
              "      <td>1015</td>\n",
              "      <td>2 Games in 1: Disney Princess &amp; The Lion King</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>THQ</td>\n",
              "      <td>1.25</td>\n",
              "      <td>0.46</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1014</th>\n",
              "      <td>1016</td>\n",
              "      <td>Star Wars Episode I: The Phantom Menace</td>\n",
              "      <td>PS</td>\n",
              "      <td>1999.0</td>\n",
              "      <td>Adventure</td>\n",
              "      <td>LucasArts</td>\n",
              "      <td>0.72</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.10</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1015</th>\n",
              "      <td>1017</td>\n",
              "      <td>Xenosaga Episode I: Der Wille zur Macht</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2002.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Namco Bandai Games</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.45</td>\n",
              "      <td>0.17</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1016</th>\n",
              "      <td>1018</td>\n",
              "      <td>Portal 2</td>\n",
              "      <td>PS3</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Valve</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1017</th>\n",
              "      <td>1019</td>\n",
              "      <td>The Beatles: Rock Band</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>MTV Games</td>\n",
              "      <td>1.19</td>\n",
              "      <td>0.40</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1018</th>\n",
              "      <td>1020</td>\n",
              "      <td>Forza Motorsport 6</td>\n",
              "      <td>XOne</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Microsoft Game Studios</td>\n",
              "      <td>0.69</td>\n",
              "      <td>0.89</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1019</th>\n",
              "      <td>1021</td>\n",
              "      <td>Sonic Colors</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Sega</td>\n",
              "      <td>0.96</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.16</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1020</th>\n",
              "      <td>1022</td>\n",
              "      <td>Cruis'n USA</td>\n",
              "      <td>N64</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>1.69</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1021</th>\n",
              "      <td>1023</td>\n",
              "      <td>Madden NFL 99</td>\n",
              "      <td>PS</td>\n",
              "      <td>1998.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>1.66</td>\n",
              "      <td>0.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1022</th>\n",
              "      <td>1024</td>\n",
              "      <td>Diablo III</td>\n",
              "      <td>PS4</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.49</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.30</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1023</th>\n",
              "      <td>1025</td>\n",
              "      <td>Uncharted: Golden Abyss</td>\n",
              "      <td>PSV</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Sony Computer Entertainment</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.75</td>\n",
              "      <td>0.13</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1024</th>\n",
              "      <td>1026</td>\n",
              "      <td>Destiny</td>\n",
              "      <td>PS3</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.67</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.12</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1025</th>\n",
              "      <td>1027</td>\n",
              "      <td>SSX Tricky</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.85</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.22</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1026</th>\n",
              "      <td>1028</td>\n",
              "      <td>Overwatch</td>\n",
              "      <td>PS4</td>\n",
              "      <td>2016.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.64</td>\n",
              "      <td>0.68</td>\n",
              "      <td>0.14</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1027</th>\n",
              "      <td>1029</td>\n",
              "      <td>Twisted Metal III</td>\n",
              "      <td>PS</td>\n",
              "      <td>1998.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>989 Studios</td>\n",
              "      <td>1.48</td>\n",
              "      <td>0.20</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.05</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1028</th>\n",
              "      <td>1030</td>\n",
              "      <td>Harry Potter and the Sorcerer's Stone</td>\n",
              "      <td>GB</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.94</td>\n",
              "      <td>0.62</td>\n",
              "      <td>0.10</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1029</th>\n",
              "      <td>1031</td>\n",
              "      <td>Disney Infinity</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>Disney Interactive Studios</td>\n",
              "      <td>1.15</td>\n",
              "      <td>0.44</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1030</th>\n",
              "      <td>1032</td>\n",
              "      <td>Crash Bandicoot: The Huge Adventure</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2002.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Universal Interactive</td>\n",
              "      <td>0.95</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1031</th>\n",
              "      <td>1033</td>\n",
              "      <td>Dishonored</td>\n",
              "      <td>X360</td>\n",
              "      <td>2012.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>Bethesda Softworks</td>\n",
              "      <td>1.06</td>\n",
              "      <td>0.52</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.14</td>\n",
              "      <td>1.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1032</th>\n",
              "      <td>1034</td>\n",
              "      <td>Rockstar Games Double Pack: Grand Theft Auto I...</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2003.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>Take-Two Interactive</td>\n",
              "      <td>0.85</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.22</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1033</th>\n",
              "      <td>1035</td>\n",
              "      <td>The Order: 1886</td>\n",
              "      <td>PS4</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Sony Computer Entertainment</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.27</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1034</th>\n",
              "      <td>1036</td>\n",
              "      <td>The Elder Scrolls Online</td>\n",
              "      <td>PS4</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Bethesda Softworks</td>\n",
              "      <td>0.66</td>\n",
              "      <td>0.78</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.28</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1035</th>\n",
              "      <td>1037</td>\n",
              "      <td>Call of Duty: World at War Final Fronts</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.61</td>\n",
              "      <td>0.18</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.94</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1036</th>\n",
              "      <td>1038</td>\n",
              "      <td>Imagine: Teacher</td>\n",
              "      <td>DS</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>0.70</td>\n",
              "      <td>0.83</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.19</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1037</th>\n",
              "      <td>1039</td>\n",
              "      <td>Call of Duty: Modern Warfare 3</td>\n",
              "      <td>PC</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.98</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.33</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1038</th>\n",
              "      <td>1040</td>\n",
              "      <td>Madden NFL 2005</td>\n",
              "      <td>XB</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>1.61</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1039</th>\n",
              "      <td>1041</td>\n",
              "      <td>Star Ocean: Till The End of Time</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2003.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>0.80</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.55</td>\n",
              "      <td>0.15</td>\n",
              "      <td>1.72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1040</th>\n",
              "      <td>1042</td>\n",
              "      <td>The Sims 3: Late Night Expansion Pack</td>\n",
              "      <td>PC</td>\n",
              "      <td>2010.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.59</td>\n",
              "      <td>0.87</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.25</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1041</th>\n",
              "      <td>1043</td>\n",
              "      <td>Game Party 3</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>Warner Bros. Interactive Entertainment</td>\n",
              "      <td>1.43</td>\n",
              "      <td>0.16</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1042</th>\n",
              "      <td>1044</td>\n",
              "      <td>Toy Story 2: Buzz Lightyear to the Rescue!</td>\n",
              "      <td>PS</td>\n",
              "      <td>1998.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Activision</td>\n",
              "      <td>0.99</td>\n",
              "      <td>0.64</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1043</th>\n",
              "      <td>1045</td>\n",
              "      <td>Deal or No Deal</td>\n",
              "      <td>DS</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>Mindscape</td>\n",
              "      <td>1.15</td>\n",
              "      <td>0.41</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.15</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1044</th>\n",
              "      <td>1046</td>\n",
              "      <td>Ace Combat 5: The Unsung War</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Sony Computer Entertainment Europe</td>\n",
              "      <td>0.88</td>\n",
              "      <td>0.34</td>\n",
              "      <td>0.32</td>\n",
              "      <td>0.18</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1045</th>\n",
              "      <td>1047</td>\n",
              "      <td>Need for Speed Underground</td>\n",
              "      <td>XB</td>\n",
              "      <td>2003.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>1.09</td>\n",
              "      <td>0.55</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.07</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1046</th>\n",
              "      <td>1048</td>\n",
              "      <td>Kanshuu Nippon Joushikiryoku Kentei Kyoukai: I...</td>\n",
              "      <td>DS</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.71</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1047</th>\n",
              "      <td>1049</td>\n",
              "      <td>Tetris Worlds</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2001.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>THQ</td>\n",
              "      <td>1.25</td>\n",
              "      <td>0.39</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.06</td>\n",
              "      <td>1.71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1048</th>\n",
              "      <td>1050</td>\n",
              "      <td>Cabela's Big Game Hunter 2010</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Activision Value</td>\n",
              "      <td>1.58</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.12</td>\n",
              "      <td>1.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1049</th>\n",
              "      <td>1051</td>\n",
              "      <td>The Crew</td>\n",
              "      <td>PS4</td>\n",
              "      <td>2014.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>0.34</td>\n",
              "      <td>1.08</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.26</td>\n",
              "      <td>1.70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1050</th>\n",
              "      <td>1052</td>\n",
              "      <td>FIFA Soccer 10</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>0.23</td>\n",
              "      <td>0.24</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1.23</td>\n",
              "      <td>1.70</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      Rank  ... Global_Sales\n",
              "1000  1002  ...         1.76\n",
              "1001  1003  ...         1.76\n",
              "1002  1004  ...         1.76\n",
              "1003  1005  ...         1.75\n",
              "1004  1006  ...         1.75\n",
              "1005  1007  ...         1.75\n",
              "1006  1008  ...         1.75\n",
              "1007  1009  ...         1.75\n",
              "1008  1010  ...         1.75\n",
              "1009  1011  ...         1.75\n",
              "1010  1012  ...         1.75\n",
              "1011  1013  ...         1.75\n",
              "1012  1014  ...         1.75\n",
              "1013  1015  ...         1.75\n",
              "1014  1016  ...         1.74\n",
              "1015  1017  ...         1.74\n",
              "1016  1018  ...         1.74\n",
              "1017  1019  ...         1.74\n",
              "1018  1020  ...         1.74\n",
              "1019  1021  ...         1.74\n",
              "1020  1022  ...         1.74\n",
              "1021  1023  ...         1.74\n",
              "1022  1024  ...         1.74\n",
              "1023  1025  ...         1.74\n",
              "1024  1026  ...         1.73\n",
              "1025  1027  ...         1.73\n",
              "1026  1028  ...         1.73\n",
              "1027  1029  ...         1.73\n",
              "1028  1030  ...         1.73\n",
              "1029  1031  ...         1.73\n",
              "1030  1032  ...         1.73\n",
              "1031  1033  ...         1.73\n",
              "1032  1034  ...         1.72\n",
              "1033  1035  ...         1.72\n",
              "1034  1036  ...         1.72\n",
              "1035  1037  ...         1.72\n",
              "1036  1038  ...         1.72\n",
              "1037  1039  ...         1.72\n",
              "1038  1040  ...         1.72\n",
              "1039  1041  ...         1.72\n",
              "1040  1042  ...         1.71\n",
              "1041  1043  ...         1.71\n",
              "1042  1044  ...         1.71\n",
              "1043  1045  ...         1.71\n",
              "1044  1046  ...         1.71\n",
              "1045  1047  ...         1.71\n",
              "1046  1048  ...         1.71\n",
              "1047  1049  ...         1.71\n",
              "1048  1050  ...         1.70\n",
              "1049  1051  ...         1.70\n",
              "1050  1052  ...         1.70\n",
              "\n",
              "[51 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ho-BR3YCK2zd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "67982526-ea88-412a-eca2-8e64f5926591"
      },
      "source": [
        "df.drop([0,1], axis=0).head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Tetris</td>\n",
              "      <td>GB</td>\n",
              "      <td>1989.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>23.20</td>\n",
              "      <td>2.26</td>\n",
              "      <td>4.22</td>\n",
              "      <td>0.58</td>\n",
              "      <td>30.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>New Super Mario Bros.</td>\n",
              "      <td>DS</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.38</td>\n",
              "      <td>9.23</td>\n",
              "      <td>6.50</td>\n",
              "      <td>2.90</td>\n",
              "      <td>30.01</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank                      Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "5     6                    Tetris       GB  ...      4.22        0.58        30.26\n",
              "6     7     New Super Mario Bros.       DS  ...      6.50        2.90        30.01\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "36S88pGRLHUX",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "outputId": "b074f629-8d1b-41c2-b2d8-19bf9523314d"
      },
      "source": [
        "df.drop(df.index[1:5], axis=0).head(10)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>Tetris</td>\n",
              "      <td>GB</td>\n",
              "      <td>1989.0</td>\n",
              "      <td>Puzzle</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>23.20</td>\n",
              "      <td>2.26</td>\n",
              "      <td>4.22</td>\n",
              "      <td>0.58</td>\n",
              "      <td>30.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>New Super Mario Bros.</td>\n",
              "      <td>DS</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.38</td>\n",
              "      <td>9.23</td>\n",
              "      <td>6.50</td>\n",
              "      <td>2.90</td>\n",
              "      <td>30.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>Wii Play</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>14.03</td>\n",
              "      <td>9.20</td>\n",
              "      <td>2.93</td>\n",
              "      <td>2.85</td>\n",
              "      <td>29.02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>New Super Mario Bros. Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>14.59</td>\n",
              "      <td>7.06</td>\n",
              "      <td>4.70</td>\n",
              "      <td>2.26</td>\n",
              "      <td>28.62</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>Duck Hunt</td>\n",
              "      <td>NES</td>\n",
              "      <td>1984.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>26.93</td>\n",
              "      <td>0.63</td>\n",
              "      <td>0.28</td>\n",
              "      <td>0.47</td>\n",
              "      <td>28.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>Nintendogs</td>\n",
              "      <td>DS</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Simulation</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>9.07</td>\n",
              "      <td>11.00</td>\n",
              "      <td>1.93</td>\n",
              "      <td>2.75</td>\n",
              "      <td>24.76</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>Mario Kart DS</td>\n",
              "      <td>DS</td>\n",
              "      <td>2005.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>9.81</td>\n",
              "      <td>7.57</td>\n",
              "      <td>4.13</td>\n",
              "      <td>1.92</td>\n",
              "      <td>23.42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>Pokemon Gold/Pokemon Silver</td>\n",
              "      <td>GB</td>\n",
              "      <td>1999.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>9.00</td>\n",
              "      <td>6.18</td>\n",
              "      <td>7.20</td>\n",
              "      <td>0.71</td>\n",
              "      <td>23.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>Wii Fit</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2007.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>8.94</td>\n",
              "      <td>8.03</td>\n",
              "      <td>3.60</td>\n",
              "      <td>2.15</td>\n",
              "      <td>22.72</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    Rank                         Name  ... Other_Sales  Global_Sales\n",
              "0      1                   Wii Sports  ...        8.46         82.74\n",
              "5      6                       Tetris  ...        0.58         30.26\n",
              "6      7        New Super Mario Bros.  ...        2.90         30.01\n",
              "7      8                     Wii Play  ...        2.85         29.02\n",
              "8      9    New Super Mario Bros. Wii  ...        2.26         28.62\n",
              "9     10                    Duck Hunt  ...        0.47         28.31\n",
              "10    11                   Nintendogs  ...        2.75         24.76\n",
              "11    12                Mario Kart DS  ...        1.92         23.42\n",
              "12    13  Pokemon Gold/Pokemon Silver  ...        0.71         23.10\n",
              "13    14                      Wii Fit  ...        2.15         22.72\n",
              "\n",
              "[10 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ly6qFTVuLd6O",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "b38bc4b9-df0b-4c4c-c959-71ca974b41f6"
      },
      "source": [
        "df[100:].head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>101</td>\n",
              "      <td>The Legend of Zelda: Twilight Princess</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Action</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>3.83</td>\n",
              "      <td>2.19</td>\n",
              "      <td>0.60</td>\n",
              "      <td>0.70</td>\n",
              "      <td>7.31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>101</th>\n",
              "      <td>102</td>\n",
              "      <td>Call of Duty: Black Ops 3</td>\n",
              "      <td>XOne</td>\n",
              "      <td>2015.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Activision</td>\n",
              "      <td>4.52</td>\n",
              "      <td>2.09</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.67</td>\n",
              "      <td>7.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>102</th>\n",
              "      <td>103</td>\n",
              "      <td>Just Dance</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>3.51</td>\n",
              "      <td>3.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.73</td>\n",
              "      <td>7.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>103</th>\n",
              "      <td>104</td>\n",
              "      <td>Battlefield 3</td>\n",
              "      <td>PS3</td>\n",
              "      <td>2011.0</td>\n",
              "      <td>Shooter</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>2.85</td>\n",
              "      <td>2.93</td>\n",
              "      <td>0.35</td>\n",
              "      <td>1.10</td>\n",
              "      <td>7.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>104</th>\n",
              "      <td>105</td>\n",
              "      <td>Need for Speed Underground</td>\n",
              "      <td>PS2</td>\n",
              "      <td>2003.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Electronic Arts</td>\n",
              "      <td>3.27</td>\n",
              "      <td>2.83</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.02</td>\n",
              "      <td>7.20</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     Rank                                    Name  ... Other_Sales  Global_Sales\n",
              "100   101  The Legend of Zelda: Twilight Princess  ...        0.70          7.31\n",
              "101   102               Call of Duty: Black Ops 3  ...        0.67          7.30\n",
              "102   103                              Just Dance  ...        0.73          7.27\n",
              "103   104                           Battlefield 3  ...        1.10          7.23\n",
              "104   105              Need for Speed Underground  ...        1.02          7.20\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hrYJL6cHbpBH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 605
        },
        "outputId": "c8fb0654-7bc1-4082-bfaa-324dd9f6eaa3"
      },
      "source": [
        "df.Platform.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DS      2163\n",
              "PS2     2161\n",
              "PS3     1329\n",
              "Wii     1325\n",
              "X360    1265\n",
              "PSP     1213\n",
              "PS      1196\n",
              "PC       960\n",
              "XB       824\n",
              "GBA      822\n",
              "GC       556\n",
              "3DS      509\n",
              "PSV      413\n",
              "PS4      336\n",
              "N64      319\n",
              "SNES     239\n",
              "XOne     213\n",
              "SAT      173\n",
              "WiiU     143\n",
              "2600     133\n",
              "NES       98\n",
              "GB        98\n",
              "DC        52\n",
              "GEN       27\n",
              "NG        12\n",
              "WS         6\n",
              "SCD        6\n",
              "3DO        3\n",
              "TG16       2\n",
              "GG         1\n",
              "PCFX       1\n",
              "Name: Platform, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "60HVk5BqdIXy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 256
        },
        "outputId": "9b5ec1bf-a8ca-4f41-ff48-aef81cb956c8"
      },
      "source": [
        "df.Genre.value_counts()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Action          3316\n",
              "Sports          2346\n",
              "Misc            1739\n",
              "Role-Playing    1488\n",
              "Shooter         1310\n",
              "Adventure       1286\n",
              "Racing          1249\n",
              "Platform         886\n",
              "Simulation       867\n",
              "Fighting         848\n",
              "Strategy         681\n",
              "Puzzle           582\n",
              "Name: Genre, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tXE9R88aLymV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 146
        },
        "outputId": "cb697f11-1514-479a-8ec7-592e864520f9"
      },
      "source": [
        "df[['Genre', \"EU_Sales\"]].values"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([['Sports', 29.02],\n",
              "       ['Platform', 3.58],\n",
              "       ['Racing', 12.88],\n",
              "       ...,\n",
              "       ['Racing', 0.0],\n",
              "       ['Puzzle', 0.01],\n",
              "       ['Platform', 0.0]], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "66bYNNh7dvv8",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "9f8e1d5b-327b-4acd-87b7-2587538529de"
      },
      "source": [
        "df.agg(['count', 'size', 'nunique'])\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16327</td>\n",
              "      <td>16598</td>\n",
              "      <td>16540</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>16598</td>\n",
              "      <td>11493</td>\n",
              "      <td>31</td>\n",
              "      <td>39</td>\n",
              "      <td>12</td>\n",
              "      <td>578</td>\n",
              "      <td>409</td>\n",
              "      <td>305</td>\n",
              "      <td>244</td>\n",
              "      <td>157</td>\n",
              "      <td>623</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Rank   Name  Platform  ...  JP_Sales  Other_Sales  Global_Sales\n",
              "count    16598  16598     16598  ...     16598        16598         16598\n",
              "size     16598  16598     16598  ...     16598        16598         16598\n",
              "nunique  16598  11493        31  ...       244          157           623\n",
              "\n",
              "[3 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mKKhKTb6gGD6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "outputId": "99205d3f-50f1-41f6-a26e-5a5f0eff8cd2"
      },
      "source": [
        "df.EU_Sales.values\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([2.902e+01, 3.580e+00, 1.288e+01, ..., 0.000e+00, 1.000e-02,\n",
              "       0.000e+00])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QRXKOq1xC33L",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "38a2e33d-194b-4ea2-c6cd-29c03db44570"
      },
      "source": [
        "df.groupby('Genre').agg(['count', 'size', 'nunique']).stack()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Action</th>\n",
              "      <th>count</th>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3253</td>\n",
              "      <td>3309</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "      <td>3316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>3316</td>\n",
              "      <td>1925</td>\n",
              "      <td>24</td>\n",
              "      <td>38</td>\n",
              "      <td>228</td>\n",
              "      <td>221</td>\n",
              "      <td>170</td>\n",
              "      <td>94</td>\n",
              "      <td>86</td>\n",
              "      <td>324</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Adventure</th>\n",
              "      <th>count</th>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1276</td>\n",
              "      <td>1282</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "      <td>1286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>1286</td>\n",
              "      <td>1048</td>\n",
              "      <td>26</td>\n",
              "      <td>28</td>\n",
              "      <td>206</td>\n",
              "      <td>78</td>\n",
              "      <td>65</td>\n",
              "      <td>50</td>\n",
              "      <td>29</td>\n",
              "      <td>121</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Fighting</th>\n",
              "      <th>count</th>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>836</td>\n",
              "      <td>846</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "      <td>848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>848</td>\n",
              "      <td>612</td>\n",
              "      <td>24</td>\n",
              "      <td>29</td>\n",
              "      <td>100</td>\n",
              "      <td>129</td>\n",
              "      <td>85</td>\n",
              "      <td>77</td>\n",
              "      <td>46</td>\n",
              "      <td>178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Misc</th>\n",
              "      <th>count</th>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1710</td>\n",
              "      <td>1712</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "      <td>1739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>1739</td>\n",
              "      <td>1327</td>\n",
              "      <td>24</td>\n",
              "      <td>31</td>\n",
              "      <td>210</td>\n",
              "      <td>159</td>\n",
              "      <td>118</td>\n",
              "      <td>85</td>\n",
              "      <td>65</td>\n",
              "      <td>222</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Platform</th>\n",
              "      <th>count</th>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>876</td>\n",
              "      <td>884</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "      <td>886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>886</td>\n",
              "      <td>589</td>\n",
              "      <td>26</td>\n",
              "      <td>36</td>\n",
              "      <td>97</td>\n",
              "      <td>175</td>\n",
              "      <td>120</td>\n",
              "      <td>101</td>\n",
              "      <td>56</td>\n",
              "      <td>239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Puzzle</th>\n",
              "      <th>count</th>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>571</td>\n",
              "      <td>581</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "      <td>582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>582</td>\n",
              "      <td>499</td>\n",
              "      <td>22</td>\n",
              "      <td>33</td>\n",
              "      <td>116</td>\n",
              "      <td>83</td>\n",
              "      <td>60</td>\n",
              "      <td>68</td>\n",
              "      <td>27</td>\n",
              "      <td>126</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Racing</th>\n",
              "      <th>count</th>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1226</td>\n",
              "      <td>1248</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "      <td>1249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>1249</td>\n",
              "      <td>772</td>\n",
              "      <td>25</td>\n",
              "      <td>32</td>\n",
              "      <td>128</td>\n",
              "      <td>155</td>\n",
              "      <td>125</td>\n",
              "      <td>66</td>\n",
              "      <td>62</td>\n",
              "      <td>218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Role-Playing</th>\n",
              "      <th>count</th>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1471</td>\n",
              "      <td>1486</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "      <td>1488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>1488</td>\n",
              "      <td>1219</td>\n",
              "      <td>26</td>\n",
              "      <td>32</td>\n",
              "      <td>158</td>\n",
              "      <td>146</td>\n",
              "      <td>106</td>\n",
              "      <td>152</td>\n",
              "      <td>62</td>\n",
              "      <td>246</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Shooter</th>\n",
              "      <th>count</th>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1282</td>\n",
              "      <td>1308</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "      <td>1310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>1310</td>\n",
              "      <td>817</td>\n",
              "      <td>25</td>\n",
              "      <td>36</td>\n",
              "      <td>150</td>\n",
              "      <td>199</td>\n",
              "      <td>152</td>\n",
              "      <td>55</td>\n",
              "      <td>83</td>\n",
              "      <td>270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Simulation</th>\n",
              "      <th>count</th>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>851</td>\n",
              "      <td>863</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "      <td>867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>867</td>\n",
              "      <td>726</td>\n",
              "      <td>23</td>\n",
              "      <td>31</td>\n",
              "      <td>150</td>\n",
              "      <td>117</td>\n",
              "      <td>93</td>\n",
              "      <td>70</td>\n",
              "      <td>39</td>\n",
              "      <td>166</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Sports</th>\n",
              "      <th>count</th>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2304</td>\n",
              "      <td>2343</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "      <td>2346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>2346</td>\n",
              "      <td>1379</td>\n",
              "      <td>25</td>\n",
              "      <td>37</td>\n",
              "      <td>163</td>\n",
              "      <td>191</td>\n",
              "      <td>139</td>\n",
              "      <td>91</td>\n",
              "      <td>78</td>\n",
              "      <td>273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"3\" valign=\"top\">Strategy</th>\n",
              "      <th>count</th>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>671</td>\n",
              "      <td>678</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "      <td>681</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>681</td>\n",
              "      <td>584</td>\n",
              "      <td>23</td>\n",
              "      <td>26</td>\n",
              "      <td>119</td>\n",
              "      <td>72</td>\n",
              "      <td>55</td>\n",
              "      <td>65</td>\n",
              "      <td>21</td>\n",
              "      <td>109</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                      Rank  Name  Platform  ...  JP_Sales  Other_Sales  Global_Sales\n",
              "Genre                                       ...                                     \n",
              "Action       count    3316  3316      3316  ...      3316         3316          3316\n",
              "             size     3316  3316      3316  ...      3316         3316          3316\n",
              "             nunique  3316  1925        24  ...        94           86           324\n",
              "Adventure    count    1286  1286      1286  ...      1286         1286          1286\n",
              "             size     1286  1286      1286  ...      1286         1286          1286\n",
              "             nunique  1286  1048        26  ...        50           29           121\n",
              "Fighting     count     848   848       848  ...       848          848           848\n",
              "             size      848   848       848  ...       848          848           848\n",
              "             nunique   848   612        24  ...        77           46           178\n",
              "Misc         count    1739  1739      1739  ...      1739         1739          1739\n",
              "             size     1739  1739      1739  ...      1739         1739          1739\n",
              "             nunique  1739  1327        24  ...        85           65           222\n",
              "Platform     count     886   886       886  ...       886          886           886\n",
              "             size      886   886       886  ...       886          886           886\n",
              "             nunique   886   589        26  ...       101           56           239\n",
              "Puzzle       count     582   582       582  ...       582          582           582\n",
              "             size      582   582       582  ...       582          582           582\n",
              "             nunique   582   499        22  ...        68           27           126\n",
              "Racing       count    1249  1249      1249  ...      1249         1249          1249\n",
              "             size     1249  1249      1249  ...      1249         1249          1249\n",
              "             nunique  1249   772        25  ...        66           62           218\n",
              "Role-Playing count    1488  1488      1488  ...      1488         1488          1488\n",
              "             size     1488  1488      1488  ...      1488         1488          1488\n",
              "             nunique  1488  1219        26  ...       152           62           246\n",
              "Shooter      count    1310  1310      1310  ...      1310         1310          1310\n",
              "             size     1310  1310      1310  ...      1310         1310          1310\n",
              "             nunique  1310   817        25  ...        55           83           270\n",
              "Simulation   count     867   867       867  ...       867          867           867\n",
              "             size      867   867       867  ...       867          867           867\n",
              "             nunique   867   726        23  ...        70           39           166\n",
              "Sports       count    2346  2346      2346  ...      2346         2346          2346\n",
              "             size     2346  2346      2346  ...      2346         2346          2346\n",
              "             nunique  2346  1379        25  ...        91           78           273\n",
              "Strategy     count     681   681       681  ...       681          681           681\n",
              "             size      681   681       681  ...       681          681           681\n",
              "             nunique   681   584        23  ...        65           21           109\n",
              "\n",
              "[36 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5Blpy_pEFhXs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "c02b4e76-abd8-4ddc-ac5a-70396fe7f599"
      },
      "source": [
        "list(df['Genre'].unique())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Sports',\n",
              " 'Platform',\n",
              " 'Racing',\n",
              " 'Role-Playing',\n",
              " 'Puzzle',\n",
              " 'Misc',\n",
              " 'Shooter',\n",
              " 'Simulation',\n",
              " 'Action',\n",
              " 'Fighting',\n",
              " 'Adventure',\n",
              " 'Strategy']"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fbD-omG-IxkL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "37c31e9e-7e1c-40bf-dd4c-4529767adb46"
      },
      "source": [
        "df_dropped = df.dropna(subset=['Year','Publisher'])\n",
        "df_dropped.head()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank                      Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K3tXZVPtJAbm",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "12c5ae01-bde4-4ec7-d0f9-2b3e0cae1001"
      },
      "source": [
        "\n",
        "df_dropped.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16291, 11)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J7XwEvqBRr6J",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "32801aca-660a-4328-c9bc-910008e97115"
      },
      "source": [
        "df_copy = df.copy()\n",
        "df_copy.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>Wii Sports</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2006.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>41.49</td>\n",
              "      <td>29.02</td>\n",
              "      <td>3.77</td>\n",
              "      <td>8.46</td>\n",
              "      <td>82.74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>Super Mario Bros.</td>\n",
              "      <td>NES</td>\n",
              "      <td>1985.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>29.08</td>\n",
              "      <td>3.58</td>\n",
              "      <td>6.81</td>\n",
              "      <td>0.77</td>\n",
              "      <td>40.24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>Mario Kart Wii</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Racing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.85</td>\n",
              "      <td>12.88</td>\n",
              "      <td>3.79</td>\n",
              "      <td>3.31</td>\n",
              "      <td>35.82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>Wii Sports Resort</td>\n",
              "      <td>Wii</td>\n",
              "      <td>2009.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>15.75</td>\n",
              "      <td>11.01</td>\n",
              "      <td>3.28</td>\n",
              "      <td>2.96</td>\n",
              "      <td>33.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>Pokemon Red/Pokemon Blue</td>\n",
              "      <td>GB</td>\n",
              "      <td>1996.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Nintendo</td>\n",
              "      <td>11.27</td>\n",
              "      <td>8.89</td>\n",
              "      <td>10.22</td>\n",
              "      <td>1.00</td>\n",
              "      <td>31.37</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Rank                      Name Platform  ...  JP_Sales Other_Sales Global_Sales\n",
              "0     1                Wii Sports      Wii  ...      3.77        8.46        82.74\n",
              "1     2         Super Mario Bros.      NES  ...      6.81        0.77        40.24\n",
              "2     3            Mario Kart Wii      Wii  ...      3.79        3.31        35.82\n",
              "3     4         Wii Sports Resort      Wii  ...      3.28        2.96        33.00\n",
              "4     5  Pokemon Red/Pokemon Blue       GB  ...     10.22        1.00        31.37\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B26hfkUiRyZL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "2d9fd09d-dcf7-47f4-f60c-828cb8c0c4de"
      },
      "source": [
        "df_copy.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16598, 11)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0P__sDwGSU7B",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "outputId": "e4e278ce-8c02-4b8f-fad3-e5561d2ab4e3"
      },
      "source": [
        "df_copy.agg(['count', 'size', 'nunique'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16327</td>\n",
              "      <td>16598</td>\n",
              "      <td>16540</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>size</th>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "      <td>16598</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>nunique</th>\n",
              "      <td>16598</td>\n",
              "      <td>11493</td>\n",
              "      <td>31</td>\n",
              "      <td>39</td>\n",
              "      <td>12</td>\n",
              "      <td>578</td>\n",
              "      <td>409</td>\n",
              "      <td>305</td>\n",
              "      <td>244</td>\n",
              "      <td>157</td>\n",
              "      <td>623</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Rank   Name  Platform  ...  JP_Sales  Other_Sales  Global_Sales\n",
              "count    16598  16598     16598  ...     16598        16598         16598\n",
              "size     16598  16598     16598  ...     16598        16598         16598\n",
              "nunique  16598  11493        31  ...       244          157           623\n",
              "\n",
              "[3 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tZOT_Ai3T1rs",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "b09107d9-21bc-4123-d641-a0026d01951b"
      },
      "source": [
        "df_copy.groupby([\"Year\", \"Genre\"]).count()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">1980.0</th>\n",
              "      <th>Action</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fighting</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Misc</th>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shooter</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sports</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">2016.0</th>\n",
              "      <th>Sports</th>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Strategy</th>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">2017.0</th>\n",
              "      <th>Action</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Role-Playing</th>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020.0</th>\n",
              "      <th>Simulation</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>389 rows × 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                     Rank  Name  Platform  ...  JP_Sales  Other_Sales  Global_Sales\n",
              "Year   Genre                               ...                                     \n",
              "1980.0 Action           1     1         1  ...         1            1             1\n",
              "       Fighting         1     1         1  ...         1            1             1\n",
              "       Misc             4     4         4  ...         4            4             4\n",
              "       Shooter          2     2         2  ...         2            2             2\n",
              "       Sports           1     1         1  ...         1            1             1\n",
              "...                   ...   ...       ...  ...       ...          ...           ...\n",
              "2016.0 Sports          38    38        38  ...        38           38            38\n",
              "       Strategy        10    10        10  ...        10           10            10\n",
              "2017.0 Action           1     1         1  ...         1            1             1\n",
              "       Role-Playing     2     2         2  ...         2            2             2\n",
              "2020.0 Simulation       1     1         1  ...         1            1             1\n",
              "\n",
              "[389 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eniVuyGaWFOy",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 457
        },
        "outputId": "4e711d52-2e99-4f41-e54d-9f12fad98c6d"
      },
      "source": [
        "df_copy.groupby([\"Genre\"])[[\"Platform\"]].count()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Platform</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Genre</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Action</th>\n",
              "      <td>3316</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Adventure</th>\n",
              "      <td>1286</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fighting</th>\n",
              "      <td>848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Misc</th>\n",
              "      <td>1739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Platform</th>\n",
              "      <td>886</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Puzzle</th>\n",
              "      <td>582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Racing</th>\n",
              "      <td>1249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Role-Playing</th>\n",
              "      <td>1488</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shooter</th>\n",
              "      <td>1310</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Simulation</th>\n",
              "      <td>867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sports</th>\n",
              "      <td>2346</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Strategy</th>\n",
              "      <td>681</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              Platform\n",
              "Genre                 \n",
              "Action            3316\n",
              "Adventure         1286\n",
              "Fighting           848\n",
              "Misc              1739\n",
              "Platform           886\n",
              "Puzzle             582\n",
              "Racing            1249\n",
              "Role-Playing      1488\n",
              "Shooter           1310\n",
              "Simulation         867\n",
              "Sports            2346\n",
              "Strategy           681"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1y4BRJfmW3aO",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "c0f9c73e-a129-4265-9f30-9dbfc484f722"
      },
      "source": [
        "df_sample = df.sample(frac=0.05, random_state=1)\n",
        "df_sample.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Rank</th>\n",
              "      <th>Name</th>\n",
              "      <th>Platform</th>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th>Publisher</th>\n",
              "      <th>NA_Sales</th>\n",
              "      <th>EU_Sales</th>\n",
              "      <th>JP_Sales</th>\n",
              "      <th>Other_Sales</th>\n",
              "      <th>Global_Sales</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4234</th>\n",
              "      <td>4236</td>\n",
              "      <td>Razor Freestyle Scooter</td>\n",
              "      <td>PS</td>\n",
              "      <td>1999.0</td>\n",
              "      <td>Sports</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>0.26</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7119</th>\n",
              "      <td>7121</td>\n",
              "      <td>AC/DC LIVE: Rock Band Track Pack</td>\n",
              "      <td>X360</td>\n",
              "      <td>2008.0</td>\n",
              "      <td>Misc</td>\n",
              "      <td>MTV Games</td>\n",
              "      <td>0.21</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>106</th>\n",
              "      <td>107</td>\n",
              "      <td>Crash Bandicoot 3: Warped</td>\n",
              "      <td>PS</td>\n",
              "      <td>1998.0</td>\n",
              "      <td>Platform</td>\n",
              "      <td>Sony Computer Entertainment</td>\n",
              "      <td>3.68</td>\n",
              "      <td>1.75</td>\n",
              "      <td>1.42</td>\n",
              "      <td>0.28</td>\n",
              "      <td>7.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5242</th>\n",
              "      <td>5244</td>\n",
              "      <td>Company of Heroes 2</td>\n",
              "      <td>PC</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Strategy</td>\n",
              "      <td>THQ</td>\n",
              "      <td>0.06</td>\n",
              "      <td>0.25</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.05</td>\n",
              "      <td>0.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13547</th>\n",
              "      <td>13549</td>\n",
              "      <td>Advance Guardian Heroes</td>\n",
              "      <td>GBA</td>\n",
              "      <td>2004.0</td>\n",
              "      <td>Role-Playing</td>\n",
              "      <td>Ubisoft</td>\n",
              "      <td>0.03</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.04</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        Rank                              Name  ... Other_Sales  Global_Sales\n",
              "4234    4236           Razor Freestyle Scooter  ...        0.03          0.46\n",
              "7119    7121  AC/DC LIVE: Rock Band Track Pack  ...        0.02          0.23\n",
              "106      107         Crash Bandicoot 3: Warped  ...        0.28          7.13\n",
              "5242    5244               Company of Heroes 2  ...        0.05          0.36\n",
              "13547  13549           Advance Guardian Heroes  ...        0.00          0.04\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "EmMFeSOjW8Hr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "2ce0c3f2-ef03-4806-f924-727545d83cbd"
      },
      "source": [
        "df_sample.groupby([\"Year\", \"Genre\"])[[\"EU_Sales\", \"JP_Sales\"]].agg([np.sum, np.mean,\n",
        "                                                              np.count_nonzero])\n",
        "\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr th {\n",
              "        text-align: left;\n",
              "    }\n",
              "\n",
              "    .dataframe thead tr:last-of-type th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th colspan=\"3\" halign=\"left\">EU_Sales</th>\n",
              "      <th colspan=\"3\" halign=\"left\">JP_Sales</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>sum</th>\n",
              "      <th>mean</th>\n",
              "      <th>count_nonzero</th>\n",
              "      <th>sum</th>\n",
              "      <th>mean</th>\n",
              "      <th>count_nonzero</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Year</th>\n",
              "      <th>Genre</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">1981.0</th>\n",
              "      <th>Racing</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shooter</th>\n",
              "      <td>0.08</td>\n",
              "      <td>0.08</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">1982.0</th>\n",
              "      <th>Action</th>\n",
              "      <td>0.06</td>\n",
              "      <td>0.02</td>\n",
              "      <td>3.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sports</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1986.0</th>\n",
              "      <th>Action</th>\n",
              "      <td>0.26</td>\n",
              "      <td>0.13</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1.18</td>\n",
              "      <td>0.590</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">2016.0</th>\n",
              "      <th>Racing</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Role-Playing</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.02</td>\n",
              "      <td>0.020</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Shooter</th>\n",
              "      <td>0.36</td>\n",
              "      <td>0.18</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.01</td>\n",
              "      <td>0.005</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sports</th>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.17</td>\n",
              "      <td>0.170</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Strategy</th>\n",
              "      <td>0.03</td>\n",
              "      <td>0.03</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.000</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>226 rows × 6 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                    EU_Sales                     JP_Sales                     \n",
              "                         sum  mean count_nonzero      sum   mean count_nonzero\n",
              "Year   Genre                                                                  \n",
              "1981.0 Racing           0.03  0.03           1.0     0.00  0.000           0.0\n",
              "       Shooter          0.08  0.08           1.0     0.00  0.000           0.0\n",
              "1982.0 Action           0.06  0.02           3.0     0.00  0.000           0.0\n",
              "       Sports           0.03  0.03           1.0     0.00  0.000           0.0\n",
              "1986.0 Action           0.26  0.13           1.0     1.18  0.590           2.0\n",
              "...                      ...   ...           ...      ...    ...           ...\n",
              "2016.0 Racing           0.03  0.03           1.0     0.00  0.000           0.0\n",
              "       Role-Playing     0.00  0.00           0.0     0.02  0.020           1.0\n",
              "       Shooter          0.36  0.18           2.0     0.01  0.005           1.0\n",
              "       Sports           0.00  0.00           0.0     0.17  0.170           1.0\n",
              "       Strategy         0.03  0.03           1.0     0.00  0.000           0.0\n",
              "\n",
              "[226 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pgb6p_R8YW2B",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 309
        },
        "outputId": "b33023ff-53ca-41ce-96f7-26bb5ba5a573"
      },
      "source": [
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "plt.style.use('seaborn-white')\n",
        "\n",
        "plt.hist(df['Platform'])\n",
        "plt.title(\"Frecuencia de ventas por plataforma\")\n",
        "plt.xlabel(\"Plataformas\")\n",
        "plt.ylabel(\"Frecuencia de ventas\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Frecuencia de ventas')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 56
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dZy8OsfvcUli",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "6c5ecd01-7279-4e72-8976-916328d7a731"
      },
      "source": [
        "df_sample['Global_Sales'] = df_sample['Global_Sales'].astype('int64')\n",
        "\n",
        "df_sample.plot(kind='scatter',x='Global_Sales',y='Platform')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f830b5bd400>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 53
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9dsZi6HKcmhD",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "92f5e878-92ca-4f61-bdaf-ef1005300a68"
      },
      "source": [
        "df_sample['Global_Sales'] = df_sample['Global_Sales'].astype('int64')\n",
        "\n",
        "df_sample.plot(kind='scatter',x='Global_Sales',y='Genre')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f83036aa6d8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4Cf-AGZ02W63",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}